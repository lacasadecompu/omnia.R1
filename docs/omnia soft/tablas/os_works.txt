### Tabla `os_works` (trabajos)
Esta tabla almacenar√° todos los trabajos realizados para los diferentes BC, sin importar el rubro. Todos los trabajos se gestionan aqu√≠ y est√°n relacionados con objetos (como veh√≠culos, electrodom√©sticos, computadoras, etc.).

CREATE TABLE os_works (
    id INT AUTO_INCREMENT PRIMARY KEY,           -- Identificador √∫nico del trabajo
    business_client_id INT NOT NULL,             -- Relaci√≥n con el BC (taller mec√°nico, etc.)
    client_object_id INT NOT NULL,               -- Relaci√≥n con el objeto (veh√≠culo, electrodom√©stico, etc.)
    object_type VARCHAR(50),                     -- Tipo de objeto (Coche, Lavadora, etc.)
    status ENUM('Pendiente', 'En proceso', 'Finalizado', 'En espera', 'Anulado', 'Para presupuestar') NOT NULL,  -- Estado del trabajo (Pendiente, En proceso, Finalizado, etc.)
    assigned_to INT,                             -- T√©cnico asignado al trabajo
    date_received DATE,                          -- Fecha en la que el trabajo fue recibido
    date_completed DATE,                         -- Fecha de finalizaci√≥n del trabajo
    services TEXT,                               -- Servicios aplicados (motor, frenos, limpieza de pc, etc.)
    parts_used TEXT,                             -- Piezas o repuestos usados
    diagnosis TEXT,                              -- Diagn√≥stico y lo que se va a hacer (campo tipo memo)
    final_report TEXT,                           -- Informe final sobre los servicios realizados (campo tipo memo)
    photos TEXT,                                 -- Ruta de las fotos adjuntas (limitar a 20 fotos a nivel de l√≥gica)
    priority ENUM('Baja', 'Media', 'Alta') DEFAULT 'Baja', -- Prioridad del trabajo
    FOREIGN KEY (business_client_id) REFERENCES os_business_clients(id), -- Relaci√≥n con la tabla de BC
    FOREIGN KEY (client_object_id) REFERENCES os_vehicles(id)             -- Relaci√≥n con la tabla de veh√≠culos
);

```
- **`os_works`**: Almacena todos los trabajos realizados en cualquier rubro. Se relaciona con los veh√≠culos (a trav√©s de `client_object_id` y `os_vehicles`).
Con este campo photos, se almacenar√°n las rutas de las fotos de los trabajos, y la l√≥gica del sistema controlar√° el n√∫mero de fotos.

**Relaciones:**
- En **os_works**, el campo **client_object_id** se relaciona con **os_vehicles** para indicar qu√© veh√≠culo se est√° reparando.
- Los **estados** de los trabajos y los veh√≠culos son independientes, pero ambos siguen una l√≥gica com√∫n de **Pendiente, En proceso, Finalizado**, etc.
-------------



¬°Buena observaci√≥n! üî•  

La **prioridad** es clave porque ayuda a organizar los trabajos seg√∫n su urgencia.  
Podemos manejarlo de dos maneras:  

### üîπ **1. Autom√°tica seg√∫n la cantidad de d√≠as desde la fecha de ingreso**
- üü¢ **Baja** ‚Üí M√°s de 7 d√≠as para completarlo.  
- üü° **Media** ‚Üí 4 a 7 d√≠as restantes.  
- üî¥ **Alta** ‚Üí Quedan menos de 3 d√≠as.  
- üö® **Urgente** ‚Üí Trabajo con prioridad extrema (se debe terminar en el d√≠a).  

üìå **Esto lo puede calcular el sistema autom√°ticamente** comparando `date_received` con `date_completed`.  

---

### üîπ **2. Manual (editable por el BC o el t√©cnico)**
A veces un trabajo que era **"baja"** pasa a **"alta"** porque el cliente lo necesita antes, o llega un repuesto y el trabajo se puede acelerar.  

üõ† **Soluci√≥n**:  
- Agregamos un campo `priority` en `os_works`.  
- Se puede actualizar manualmente en el sistema.  
- Si no se cambia manualmente, el sistema lo ajusta autom√°ticamente seg√∫n el tiempo restante.  

---

üîé **Ejemplo de uso:**  

| ID  | Cliente | Fecha Ingreso | Fecha Estimada | Prioridad |
|-----|---------|--------------|----------------|-----------|
| 101 | Juan P√©rez | 2025-03-10 | 2025-03-20 | Baja |
| 102 | Taller Mec√°nico XYZ | 2025-03-12 | 2025-03-18 | Media |
| 103 | Electr√≥nica Ramos | 2025-03-15 | 2025-03-17 | Alta |
| 104 | Sof√≠a Tech | 2025-03-15 | 2025-03-15 | Urgente |

---